Index: src/Entity/DirectoryTree.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//\r\n// Source code recreated from a .class file by IntelliJ IDEA\r\n// (powered by FernFlower decompiler)\r\n//\r\n\r\npackage Entity;\r\n\r\nimport java.util.HashMap;\r\nimport java.util.Iterator;\r\nimport java.util.Map;\r\nimport javax.naming.NameAlreadyBoundException;\r\n\r\npublic class DirectoryTree {\r\n    private ItemDataObject root = null;\r\n    private final Map<String, Integer> fileNames = new HashMap();\r\n\r\n    public DirectoryTree() {\r\n    }\r\n\r\n    public boolean add(ItemDataObject item, String parent) throws NameAlreadyBoundException {\r\n        if (item == null) {\r\n            return false;\r\n        } else if (this.root == null) {\r\n            this.root = item;\r\n            this.addName(item.getName());\r\n            return true;\r\n        } else if (parent == null && this.root.isFolder()) {\r\n            this.root.addChildren(item);\r\n            this.addName(item.getName());\r\n            return true;\r\n        } else if (this.fileNames.containsKey(parent) && (Integer)this.fileNames.get(parent) > 1) {\r\n            throw new NameAlreadyBoundException(parent);\r\n        } else if (this.root.getName().equals(parent)) {\r\n            this.root.addChildren(item);\r\n            this.addName(item.getName());\r\n            return true;\r\n        } else {\r\n            boolean isAdded = false;\r\n            Iterator var4 = this.root.getChildrens().iterator();\r\n\r\n            do {\r\n                if (!var4.hasNext()) {\r\n                    return false;\r\n                }\r\n\r\n                ItemDataObject children = (ItemDataObject)var4.next();\r\n                if (children.isFolder()) {\r\n                    isAdded = children.addChildren(item, parent);\r\n                }\r\n            } while(!isAdded);\r\n\r\n            this.addName(item.getName());\r\n            return true;\r\n        }\r\n    }\r\n\r\n    public void addName(String name) {\r\n        if (this.fileNames.containsKey(name)) {\r\n            int count = (Integer)this.fileNames.get(name);\r\n            this.fileNames.put(name, count + 1);\r\n        } else {\r\n            this.fileNames.put(name, 1);\r\n        }\r\n\r\n    }\r\n\r\n    public ItemDataObject getRoot() {\r\n        return this.root;\r\n    }\r\n\r\n    public String getPath(String name) {\r\n        ItemDataObject temp = this.root;\r\n\r\n        StringBuilder path;\r\n        for(path = new StringBuilder(); temp != null; temp = temp.getNextChildren()) {\r\n            if (temp.getName().equals(name)) {\r\n                path.append(temp.getName());\r\n                break;\r\n            }\r\n\r\n            path.append(temp.getName()).append(\"/\");\r\n        }\r\n\r\n        return path.toString();\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        ItemDataObject temp1 = new ItemDataObject(\"temp1\", 0L, \"show\", 0L, true);\r\n        ItemDataObject temp2 = new ItemDataObject(\"temp2\", 0L, \"show\", 0L, false);\r\n        ItemDataObject temp3 = new ItemDataObject(\"temp3\", 0L, \"show\", 0L, true);\r\n        ItemDataObject temp4 = new ItemDataObject(\"temp4\", 0L, \"show\", 0L, false);\r\n        ItemDataObject temp5 = new ItemDataObject(\"temp1\", 0L, \"show\", 0L, true);\r\n        ItemDataObject temp6 = new ItemDataObject(\"temp6\", 0L, \"show\", 0L, false);\r\n        DirectoryTree tree = new DirectoryTree();\r\n\r\n        try {\r\n            tree.add(temp1, (String)null);\r\n            tree.add(temp2, \"temp1\");\r\n            tree.add(temp3, \"temp1\");\r\n            tree.add(temp4, \"temp3\");\r\n            tree.add(temp5, \"temp3\");\r\n            tree.add(temp6, \"temp1\");\r\n        } catch (NameAlreadyBoundException var9) {\r\n            System.out.println(var9.getMessage());\r\n        }\r\n\r\n        System.out.println(tree.getPath(\"temp5\"));\r\n    }\r\n}\r\n
===================================================================
diff --git a/src/Entity/DirectoryTree.java b/src/Entity/DirectoryTree.java
--- a/src/Entity/DirectoryTree.java	
+++ b/src/Entity/DirectoryTree.java	
@@ -1,8 +1,3 @@
-//
-// Source code recreated from a .class file by IntelliJ IDEA
-// (powered by FernFlower decompiler)
-//
-
 package Entity;
 
 import java.util.HashMap;
